[General]
network = UFNetwork 
cpu-time-limit = 30s
real-time-limit = 30s
sim-time-limit = 1000s
simtime-resolution = ps
# Definindo o número de clientes
#*.numClients = 10
# Configurações de roteamento e IPv4
*.cticBorda.ip.routingTable.routerId = "1.1.1.1"
*.cticBorda.ip.routingTable.netmask = "255.255.255.0"
# Configuração automática de endereços IP

# Configuração da tabela de roteamento dos hosts (clientes e switches)
*.cliente.ipv4.address = "192.168.1.1"
*.cliente.ipv4.netmask = "255.255.255.0"
*.cliente1.ipv4.address = "192.168.1.2"
*.cliente1.ipv4.netmask = "255.255.255.0"
*.cliente2.ipv4.address = "192.168.1.3"
*.cliente2.ipv4.netmask = "255.255.255.0"
*.cliente3.ipv4.address = "192.168.1.4"
*.cliente3.ipv4.netmask = "255.255.255.0"
*.cliente4.ipv4.address = "192.168.1.5"
*.cliente4.ipv4.netmask = "255.255.255.0"
*.cliente5.ipv4.address = "192.168.1.6"
*.cliente5.ipv4.netmask = "255.255.255.0"
*.cliente6.ipv4.address = "192.168.1.7"
*.cliente6.ipv4.netmask = "255.255.255.0"

# Configurar atrasos e taxas de enlace
*.cticBorda.eth[0].bitrate = 1Gbps
*.cticBorda.eth[0].delay = 0.1ms
*.leecBorda.eth[0].bitrate = 1Gbps
*.leecBorda.eth[0].delay = 0.1ms
*.cticBorda.eth[0].bitrate = 10Gbps
*.cticBorda.eth[0].delay = 0.1ms
*.switch.eth[0].bitrate = 1Gbps
*.switch1.eth[0].bitrate = 1Gbps
*.switch2.eth[0].bitrate = 1Gbps

# Configurando os clientes
*.cliente.numTcpApps = 1
*.cliente.numUdpApps = 0

*.cliente.tcpApp[0].typename = "TcpBasicClientApp"  # Aplicação cliente básica
*.cliente.tcpApp[0].connectAddress = "server"  # Os clientes se conectarão ao servidor
*.cliente.tcpApp[0].connectPort = 80  # Usarão a porta 80 para se conectar
*.cliente.tcpApp[0].tOpen = 1s  # O cliente abrirá a conexão após 1 segundo de simulação
*.cliente.tcpApp[0].tSend = exponential(2s)
*.cliente.tcpApp[1].tSend = uniform(1s, 10s)#envio de mútiplos tipo de dados
  # O cliente começará a enviar pacotes após 2 segundos
*.cliente.tcpApp[0].sendBytes = 1kB  # Quantidade de dados a enviar
*.cliente.tcpApp[0].tClose = 50s  # O cliente fechará a conexão após 50 segundos

*.cliente1.tcpApp[0].typename = "TcpBasicClientApp"  # Aplicação cliente básica
*.cliente1.tcpApp[0].connectAddress = "server"  # Os clientes se conectarão ao servidor
*.cliente1.tcpApp[0].connectPort = 80  # Usarão a porta 80 para se conectar
*.cliente1.tcpApp[0].tOpen = 1s  # O cliente abrirá a conexão após 1 segundo de simulação
*.cliente1.tcpApp[0].tSend = exponential(2s)
*.cliente1.tcpApp[1].tSend = uniform(1s, 10s)#envio de mútiplos tipo de dados
  # O cli1ente começará a enviar pacotes após 2 segundos
*.cliente1.tcpApp[0].sendBytes = 1kB  # Quantidade de dados a enviar
*.cliente1.tcpApp[0].tClose = 50s  # O cliente fechará a conexão após 50 segundos

*.cliente2.tcpApp[0].typename = "TcpBasicClientApp"  # Aplicação cliente básica
*.cliente2.tcpApp[0].connectAddress = "server"  # Os clientes se conectarão ao servidor
*.cliente2.tcpApp[0].connectPort = 80  # Usarão a porta 80 para se conectar
*.cliente2.tcpApp[0].tOpen = 1s  # O cliente abrirá a conexão após 1 segundo de simulação
*.cliente2.tcpApp[0].tSend = exponential(2s)
*.cliente2.tcpApp[1].tSend = uniform(1s, 10s)#envio de mútiplos tipo de dados
  # O cliente começará a enviar pacotes após 2 segundos
*.cliente2.tcpApp[0].sendBytes = 1kB  # Quantidade de dados a enviar
*.cliente2.tcpApp[0].tClose = 50s  # O cliente fechará a conexão após 50 segundos

*.cliente3.tcpApp[0].typename = "TcpBasicClientApp"  # Aplicação cliente básica
*.cliente3.tcpApp[0].connectAddress = "server"  # Os clientes se conectarão ao servidor
*.cliente3.tcpApp[0].connectPort = 80  # Usarão a porta 80 para se conectar
*.cliente3.tcpApp[0].tOpen = 1s  # O cliente abrirá a conexão após 1 segundo de simulação
*.cliente3.tcpApp[0].tSend = exponential(2s)
*.cliente3.tcpApp[1].tSend = uniform(1s, 10s)#envio de mútiplos tipo de dados
  # O cliente começará a enviar pacotes após 2 segundos
*.cliente3.tcpApp[0].sendBytes = 1kB  # Quantidade de dados a enviar
*.cliente3.tcpApp[0].tClose = 50s  # O cliente fechará a conexão após 50 segundos

*.cliente4.tcpApp[0].typename = "TcpBasicClientApp"  # Aplicação cliente básica
*.cliente4.tcpApp[0].connectAddress = "server"  # Os clientes se conectarão ao servidor
*.cliente4.tcpApp[0].connectPort = 80  # Usarão a porta 80 para se conectar
*.cliente4.tcpApp[0].tOpen = 1s  # O cliente abrirá a conexão após 1 segundo de simulação
*.cliente4.tcpApp[0].tSend = exponential(2s)
*.cliente4.tcpApp[1].tSend = uniform(1s, 10s)#envio de mútiplos tipo de dados
  # O cliente começará a enviar pacotes após 2 segundos
*.cliente4.tcpApp[0].sendBytes = 1kB  # Quantidade de dados a enviar
*.cliente4.tcpApp[0].tClose = 50s  # O cliente fechará a conexão após 50 segundos

*.cliente5.tcpApp[0].typename = "TcpBasicClientApp"  # Aplicação cliente básica
*.cliente5.tcpApp[0].connectAddress = "server"  # Os clientes se conectarão ao servidor
*.cliente5.tcpApp[0].connectPort = 80  # Usarão a porta 80 para se conectar
*.cliente5.tcpApp[0].tOpen = 1s  # O cliente abrirá a conexão após 1 segundo de simulação
*.cliente5.tcpApp[0].tSend = exponential(2s)
*.cliente5.tcpApp[1].tSend = uniform(1s, 10s)#envio de mútiplos tipo de dados
  # O cliente começará a enviar pacotes após 2 segundos
*.cliente5.tcpApp[0].sendBytes = 1kB  # Quantidade de dados a enviar
*.cliente5.tcpApp[0].tClose = 50s  # O cliente fechará a conexão após 50 segundos

*.cliente6.tcpApp[0].typename = "TcpBasicClientApp"  # Aplicação cliente básica
*.cliente6.tcpApp[0].connectAddress = "server"  # Os clientes se conectarão ao servidor
*.cliente6.tcpApp[0].connectPort = 80  # Usarão a porta 80 para se conectar
*.cliente6.tcpApp[0].tOpen = 1s  # O cliente abrirá a conexão após 1 segundo de simulação
*.cliente6.tcpApp[0].tSend = exponential(2s)
*.cliente6.tcpApp[1].tSend = uniform(1s, 10s)#envio de mútiplos tipo de dados
  # O cliente começará a enviar pacotes após 2 segundos
*.cliente6.tcpApp[0].sendBytes = 1kB  # Quantidade de dados a enviar
*.cliente6.tcpApp[0].tClose = 50s  # O cliente fechará a conexão após 50 segundos

*.cliente7.tcpApp[0].typename = "TcpBasicClientApp"  # Aplicação cliente básica
*.cliente7.tcpApp[0].connectAddress = "eduroam"  # Os clientes se conectarão ao servidor
*.cliente7.tcpApp[0].connectPort = 80  # Usarão a porta 80 para se conectar
*.cliente7.tcpApp[0].tOpen = 1s  # O cliente abrirá a conexão após 1 segundo de simulação
*.cliente7.tcpApp[0].tSend = exponential(2s)
*.cliente7.tcpApp[1].tSend = uniform(1s, 10s)#envio de mútiplos tipo de dados
  # O cliente começará a enviar pacotes após 2 segundos
*.cliente7.tcpApp[0].sendBytes = 1kB  # Quantidade de dados a enviar
*.cliente7.tcpApp[0].tClose = 50s  # O cliente fechará a conexão após 50 segundos


# Configurações de IP para o roteador
*.RNP.ipv4.address = "10.0.0.1"
*.RNP.ipv4.netmask = "255.255.255.0"
*.RNP.ipv4.gateway = "10.0.0.254"
